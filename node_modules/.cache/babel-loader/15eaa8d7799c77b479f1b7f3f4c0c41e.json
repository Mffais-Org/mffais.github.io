{"ast":null,"code":"import _slicedToArray from \"/Users/cinnamon/Desktop/Projects/mffais.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/cinnamon/Desktop/Projects/mffais.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\n\nvar usePrevious = function usePrevious(value, ignore) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\n\nfunction alwaysNewT(i18n, language, namespace, keyPrefix) {\n  return i18n.getFixedT(language, namespace, keyPrefix);\n}\n\nfunction useMemoizedT(i18n, language, namespace, keyPrefix) {\n  return useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n}\n\nexport function useTranslation(ns) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var i18nFromProps = props.i18n;\n\n  var _ref = useContext(I18nContext) || {},\n      i18nFromContext = _ref.i18n,\n      defaultNSFromContext = _ref.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n\n    var notReadyT = function notReadyT(k, optsOrDefaultValue) {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    var retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n\n  var i18nOptions = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), i18n.options.react), props);\n\n  var useSuspense = i18nOptions.useSuspense,\n      keyPrefix = i18nOptions.keyPrefix;\n  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {\n    return hasLoadedNamespace(n, i18n, i18nOptions);\n  });\n  var memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n\n  var getT = function getT() {\n    return memoGetT;\n  };\n\n  var getNewT = function getNewT() {\n    return alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  };\n\n  var _useState = useState(getT),\n      _useState2 = _slicedToArray(_useState, 2),\n      t = _useState2[0],\n      setT = _useState2[1];\n\n  var joinedNS = namespaces.join();\n  if (props.lng) joinedNS = \"\".concat(props.lng).concat(joinedNS);\n  var previousJoinedNS = usePrevious(joinedNS);\n  var isMounted = useRef(true);\n  useEffect(function () {\n    var bindI18n = i18nOptions.bindI18n,\n        bindI18nStore = i18nOptions.bindI18nStore;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, function () {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, function () {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getNewT);\n    }\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return function () {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {\n        return i18n.off(e, boundReset);\n      });\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {\n        return i18n.store.off(e, boundReset);\n      });\n    };\n  }, [i18n, joinedNS]);\n  useEffect(function () {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  var ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(function (resolve) {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, function () {\n        return resolve();\n      });\n    } else {\n      loadNamespaces(i18n, namespaces, function () {\n        return resolve();\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cinnamon/Desktop/Projects/mffais.github.io/node_modules/react-i18next/dist/es/useTranslation.js"],"names":["useState","useEffect","useContext","useRef","useCallback","getI18n","getDefaults","ReportNamespaces","I18nContext","warnOnce","loadNamespaces","loadLanguages","hasLoadedNamespace","usePrevious","value","ignore","ref","current","alwaysNewT","i18n","language","namespace","keyPrefix","getFixedT","useMemoizedT","useTranslation","ns","props","arguments","length","undefined","i18nFromProps","i18nFromContext","defaultNSFromContext","defaultNS","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","retNotReady","t","ready","options","react","wait","i18nOptions","useSuspense","namespaces","addUsedNamespaces","isInitialized","initializedStoreOnce","every","n","memoGetT","lng","nsMode","getT","getNewT","setT","joinedNS","join","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","on","store","split","forEach","e","off","ret","Promise","resolve"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nfunction alwaysNewT(i18n, language, namespace, keyPrefix) {\n  return i18n.getFixedT(language, namespace, keyPrefix);\n}\nfunction useMemoizedT(i18n, language, namespace, keyPrefix) {\n  return useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n}\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    function boundReset() {\n      if (isMounted.current) setT(getNewT);\n    }\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}